name: CI

on:
  push:
    branches: [ main, dev]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint 
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true
    
    - name: Run RuboCop
      run: bundle exec rubocop --format github

  test-unit:
    runs-on: ubuntu-latest
    name: Unit Tests (Ruby 3.3)

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby 3.3
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Run unit tests
      run: bundle exec rspec --exclude-pattern "spec/vcr/**/*_spec.rb" --format progress --format documentation --out test-results.txt
      env:
        # Dummy API key for any mocked tests
        OPENROUTER_API_KEY: "dummy-api-key-for-testing-do-not-use"

    - name: Display test results
      if: always()
      run: |
        if [ -f test-results.txt ]; then
          echo "ðŸ“Š Test Results:"
          cat test-results.txt
        fi

  test-vcr:
    runs-on: ubuntu-latest
    name: VCR Integration Tests (Ruby 3.3)

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby 3.3
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3'
        bundler-cache: true

    - name: Run VCR tests with cassettes
      run: bundle exec rspec spec/vcr --format progress --tag ~skip
      env:
        # In CI, VCR uses cassettes only (no real API calls)
        CI: true
        VCR_RECORD: none
        # Dummy API key (cassettes are used, no real requests)
        OPENROUTER_API_KEY: "dummy-api-key-for-testing-do-not-use"
      continue-on-error: true

    - name: Report VCR test status
      if: always()
      run: |
        echo "âœ… VCR tests completed (pending tests are expected)"
        echo "ðŸ’¡ To re-record cassettes locally, run: VCR_RECORD_ALL=true bundle exec rspec spec/vcr"
        
